{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\____________________\\\\.vscode\\\\\\u0432\\u0435\\u0431 3 \\u043B\\u0430\\u0431\\u0430 \\u0414\\\\websec-3\\\\instagram-clone\\\\src\\\\components\\\\post\\\\comments.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { formatDistance } from 'date-fns';\nimport AddComment from './add-comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput\n  } = _ref;\n  const [comments, setComments] = useState(allComments);\n  const [commentsSlice, setCommentsSlice] = useState(3);\n  const showNextComments = () => {\n    setCommentsSlice(commentsSlice + 3);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pt-1 pb-4\",\n      children: [comments.slice(0, commentsSlice).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-1 font-bold\",\n          children: item.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, `${item.comment}-${item.displayName}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)), comments.length >= 3 && commentsSlice < comments.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-sm text-gray-base mb-1 cursor-pointer focus:outline-none\",\n        type: \"button\",\n        onClick: showNextComments,\n        onKeyDown: event => {\n          if (event.key === 'Enter') {\n            showNextComments();\n          }\n        },\n        children: \"View more comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-base uppercase text-xs mt-2\",\n        children: [formatDistance(posted, new Date()), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Comments, \"wJoBrADLWp8EAn6p7mHDxGMzt1g=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","formatDistance","AddComment","Comments","docId","comments","allComments","posted","commentInput","setComments","commentsSlice","setCommentsSlice","showNextComments","slice","map","item","displayName","comment","length","event","key","Date"],"sources":["C:/Users/____________________/.vscode/веб 3 лаба Д/websec-3/instagram-clone/src/components/post/comments.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { formatDistance } from 'date-fns';\r\nimport AddComment from './add-comment';\r\n\r\nexport default function Comments({ docId, comments: allComments, posted, commentInput }) {\r\n  const [comments, setComments] = useState(allComments);\r\n  const [commentsSlice, setCommentsSlice] = useState(3);\r\n\r\n  const showNextComments = () => {\r\n    setCommentsSlice(commentsSlice + 3);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-4 pt-1 pb-4\">\r\n        {comments.slice(0, commentsSlice).map((item) => (\r\n          <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\r\n            <span className=\"mr-1 font-bold\">{item.displayName}</span>\r\n            <span>{item.comment}</span>\r\n          </p>\r\n        ))}\r\n        {comments.length >= 3 && commentsSlice < comments.length && (\r\n          <button\r\n            className=\"text-sm text-gray-base mb-1 cursor-pointer focus:outline-none\"\r\n            type=\"button\"\r\n            onClick={showNextComments}\r\n            onKeyDown={(event) => {\r\n              if (event.key === 'Enter') {\r\n                showNextComments();\r\n              }\r\n            }}\r\n          >\r\n            View more comments\r\n          </button>\r\n        )}\r\n        <p className=\"text-gray-base uppercase text-xs mt-2\">\r\n          {formatDistance(posted, new Date())} ago\r\n        </p>\r\n      </div>\r\n      {/* <AddComment\r\n        docId={docId}\r\n        comments={comments}\r\n        setComments={setComments}\r\n        commentInput={commentInput}\r\n      /> */}\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,UAAU;AACzC,OAAOC,UAAU,MAAM,eAAe;AAAC;AAAA;AAEvC,eAAe,SAASC,QAAQ,OAAyD;EAAA;EAAA,IAAxD;IAAEC,KAAK;IAAEC,QAAQ,EAAEC,WAAW;IAAEC,MAAM;IAAEC;EAAa,CAAC;EACrF,MAAM,CAACH,QAAQ,EAAEI,WAAW,CAAC,GAAGT,QAAQ,CAACM,WAAW,CAAC;EACrD,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMY,gBAAgB,GAAG,MAAM;IAC7BD,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,eAAe;MAAA,WAC3BL,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAEH,aAAa,CAAC,CAACI,GAAG,CAAEC,IAAI,iBACzC;QAA+C,SAAS,EAAC,MAAM;QAAA,wBAC7D;UAAM,SAAS,EAAC,gBAAgB;UAAA,UAAEA,IAAI,CAACC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1D;UAAA,UAAOD,IAAI,CAACE;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA,GAFpB,GAAEF,IAAI,CAACE,OAAQ,IAAGF,IAAI,CAACC,WAAY,EAAC;QAAA;QAAA;QAAA;MAAA,QAI9C,CAAC,EACDX,QAAQ,CAACa,MAAM,IAAI,CAAC,IAAIR,aAAa,GAAGL,QAAQ,CAACa,MAAM,iBACtD;QACE,SAAS,EAAC,+DAA+D;QACzE,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEN,gBAAiB;QAC1B,SAAS,EAAGO,KAAK,IAAK;UACpB,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;YACzBR,gBAAgB,EAAE;UACpB;QACF,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAIL,eACD;QAAG,SAAS,EAAC,uCAAuC;QAAA,WACjDX,cAAc,CAACM,MAAM,EAAE,IAAIc,IAAI,EAAE,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC;IAAA;MAAA;MAAA;MAAA;IAAA;EACA,iBAOL;AAEP;AAAC,GA3CuBlB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}